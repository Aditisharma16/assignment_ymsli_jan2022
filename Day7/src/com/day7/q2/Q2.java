package com.day7.q2;

import java.util.Random;

class Multithread implements Runnable{

	private int sum,value;
	private boolean isDone = false;
	@Override
	public void run() {
		
		
	    value=1+(int)(Math.random()*10);
		sum+=value;
		

		System.out.println("["+ Thread.currentThread().getName()+":"+ value+ " ]");
		isDone = true;
		synchronized (this) {
			notifyAll();
		}
		
		
	}
	public int getSum()
	{
		if (!isDone) {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		return sum;
	}
	
}
public class Q2 {

	public static void main(String[] args) {
Multithread job=new Multithread();
		
		Thread t1=new Thread(job,"Thread1");
		Thread t2=new Thread(job,"Thread2");
		Thread t3=new Thread(job,"Thread3");
		Thread t4=new Thread(job,"Thread4");
		Thread t5=new Thread(job,"Thread5");
		
		t1.start();
		t2.start();
		t3.start();
		t4.start();
		t5.start();
		
		try {
			t1.join(1000);
			t2.join(2000);
			t3.join(2000);
			t4.join(1000);
			t5.join(1000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		System.out.println("Sum of random number generated by threads : "+ job.getSum());
		
		System.out.println("ending the main: "+Thread.currentThread().getName());
		
		
	}

}
